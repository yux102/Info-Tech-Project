1. Partially Observable Environments (on-board sensors only)  Occupancy Grid  Potential Field  Vector Field Histogram 2. Fully Observable Environments (overhead cameras)  Delaunay Triangulation  Parameterized Cubic Splines c(cid:13)Alan Blair, 2014-18
1. divide environment into a Cartesian grid 2. for each square in the grid, maintain an estimate of the probability of an obstacle in that square c(cid:13)Alan Blair, 2014-18
Using an occupancy grid for its map, an agent can plan a path using a Potential Field. 1. treat robots conguration as a point in a potential eld that combines attraction to the goal, and repulsion from obstacles 2. very rapid computation, but can get stuck in local optima, thus failing to nd a path c(cid:13)Alan Blair, 2014-18
Start Goal c(cid:13)Alan Blair, 2014-18
A more sophisticated approach - less likely to get stuck in local optima - is a Vector Field Histogram 1. Cartesian histogram grid, continuously updated 2. Polar histogram, based on current position/orientation of robot 3. candidate valleys (contiguous sectors with low obstacle density) 4. select candidate valleys, based on proximity to target direction c(cid:13)Alan Blair, 2014-18
1. applicable in situations where the environment is well mapped by overhead cameras (museums, shopping centres, robocup small league) 2. add line segments between (closest points of) obstacles, sorted according to length (shortest segments rst) 3. do not add any segment that crosses an existing segment c(cid:13)Alan Blair, 2014-18
1. dual of the Delaunay triangulation is called a Voronoi diagram 2. prune arcs that are too small for the robot to traverse 3. ASearch can then be applied on the resulting graph 4. path can be converted to a trajectory for the robot c(cid:13)Alan Blair, 2014-18
1. For the problem of a soccer robot getting to the ball, or a wheeled robot navigating a maze, the shortest distance path might not be the same as the shortest time path. 2. By speeding up and then slowing down, the robot could traverse a path with long straight stretches faster than a shorter path with lots of twists and turns. c(cid:13)Alan Blair, 2014-18
Start Goal How can we approach the problem of nding the shortest time path? c(cid:13)Alan Blair, 2014-18
Steps in the Algorithm: 1. Delaunay Triangulation 2. ASearch, using paths composed of Parametric Cubic Splines 3. Smooth entire curve with Waypoint Tuning by Gradient Descent c(cid:13)Alan Blair, 2014-18
Assume each path segment is of the form P(t) = (cid:16) Px(t) Py(t) (cid:17) = (cid:16) ax ay (cid:17)t 3 +(cid:16) bx by (cid:17)t 2 +(cid:16) cx cy (cid:17)t +(cid:16) dx dy (cid:17) Solve these equations for a specied position and velocity at the beginning (t = 0) and the end (t = s) of the segment. Traditional method was to set s = 1. We instead try to minimize s (total time for segment) while satisfying the kinematic constraints: P (t) A + (cid:12)(cid:12)(cid:12) 2 P (t) V (cid:12)(cid:12)(cid:12)  1, for 0  t  s, where A and V are the maximal acceleration and velocity of the robot. c(cid:13)Alan Blair, 2014-18
This system has been successfully deployed in the Robocup F180 League. c(cid:13)Alan Blair, 2014-18
1. S. Thrun, W. Burgard & D. Fox, Probabilistic Robotics, MIT Press, 2005. 2. J. Thomas, A. Blair & N. Barnes, Towards an Efcient Optimal Trajectory Planner for Multiple Mobile Robots, 2003 International Conference on Robotics and Systems (IROS03), 22912296. c(cid:13)Alan Blair, 2014-18
